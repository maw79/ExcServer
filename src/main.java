import java.util.*;public class main {    public static void main(String[] args)    {        //int choice = 0;        Scanner input = new Scanner(System.in);        //creating new inventory        ManageInventory storeInv = new ManageInventory();        while(true) {            System.out.println("MAIN MENU");            System.out.println("1: Customer Menu");            System.out.println("2: Manager Menu");            System.out.println("3: Restocker Menu");            System.out.println("4: Exit");            System.out.println();            System.out.print("Enter a menu choice: ");            try {                int choice = input.nextInt();                switch (choice) {                    case 1:                        //INTERFACE: customer transaction                        Vector transaction;                        int productID = 1;                        System.out.println("\nCUSTOMER MENU");                        while (productID != 0) {                            System.out.print("Enter or Scan in a Product ID (0 to finish): ");                            //accept product ID from scanner                            try {                                productID = input.nextInt();                                transaction = storeInv.searchData(productID);                                int ID = (int) transaction.get(1);                                //System.out.println(ID);                                if (ID == productID) {                                    //System.out.println("item found!");                                    System.out.println(transaction.get(0) + " added to cart");                                    System.out.println();                                }                            } catch (Exception e) {                                System.out.println("Invalid Product ID");                                System.out.println();                            }                        }                        //repeat above to accept all products scanned                        //prompt for payment method                        //send payment verification to bank if card                        //get approval or denial from bank if card (boolean)                        //accept bills if cash, deny if wrinkly bill                        //prompt for more cash if remaining balance > 0                        //print out receipt                        //System.out.println("customer transaction interface");                        break;                    case 2:                        //INTERFACE: manager menu                        //adding items to inventory database                        int choice2 = 0;                        System.out.println("\nMANAGER MENU");                        System.out.println("1: Populate Inventory Database");                        System.out.println("2: Add New Item to Inventory Database");                        System.out.println("3: Remove Item from Inventory Database");                        System.out.println("4: Print Transaction Log");                        System.out.println();                        System.out.print("Enter a menu choice: ");                        choice2 = input.nextInt();                        String Pname;                        int PID;                        int PQ;                        int PC;                        switch (choice2) {                            case 1:                                //Large Items (ID 0-9)                                storeInv.AddItem("M1 Abrams Tank", 1, 5, 20000000);                                //storeInv.RemoveItem(0001);                                //Assault Rifles (ID 10-19)                                storeInv.AddItem("Bushmaster ACR", 11, 10, 2000);                                storeInv.AddItem("Tavor AR", 12, 10, 1800);                                //Hand Guns (ID 20-29)                                storeInv.AddItem("USP 45", 20, 5, 750);                                storeInv.AddItem("Glock 40", 21, 5, 500);                                storeInv.AddItem("M1911", 22, 5, 600);                                //Rocket Launchers and Missiles (ID 30-39)                                storeInv.AddItem("FGM-148 Javelin", 30, 5, 246000);                                storeInv.AddItem("Jericho Missile", 31, 15, 500000);                                //Explosives and Thrown (ID 40-49)                                storeInv.AddItem("Hand Grenade", 40, 50, 150);                                storeInv.AddItem("C4 (1 lb)", 41, 20, 20);                                storeInv.AddItem("Flash Grenade", 42, 50, 100);                                storeInv.AddItem("Stun Grenade", 43, 50, 100);                                Vector v = new Vector();                                v = storeInv.PullData();                                for (int i = 0; i < v.size(); i++) {                                    Vector temp = new Vector();                                    System.out.println(v.elementAt(i));                                }                                FinancialTData FinT = new FinancialTData();                                double SubT = FinT.GetSubtotal(v);                                double tax = FinT.GetTax(SubT);                                System.out.println("Your Subtotal is: $" + SubT);                                System.out.println("Tax: $" + tax);                                System.out.println("Total: $" + FinT.GetTotal(SubT, tax));                                storeInv.close();                                break;                            case 2:                                System.out.print("Enter Product Name: ");                                Pname = input.next();                                System.out.print("Enter Product ID: ");                                PID = input.nextInt();                                System.out.print("Enter Product Quantity: ");                                PQ = input.nextInt();                                System.out.print("Enter Product Cost: ");                                PC = input.nextInt();                                System.out.println();                                storeInv.AddItem(Pname, PID, PQ, PC);                                break;                            case 3:                                System.out.print("Enter a Product ID to remove product from inventory: ");                                PID = input.nextInt();                                storeInv.RemoveItem(PID);                                break;                            case 4:                                break;                            default:                                break;                        }                        break;                    case 3:                        //INTERFACE: restocker menu                        int ProductID = 0;                        int quantity = 0;                        System.out.println("\nRESTOCKER MENU");                        System.out.print("Specify a Product ID to restock: ");                        ProductID = input.nextInt();                        System.out.print("How many need to be in stock?: ");                        quantity = input.nextInt();                        System.out.println();                        storeInv.UpdateQty(ProductID, quantity);                        break;                    case 4:                        return;                    default:                        System.out.println("Invalid menu choice");                }            } catch (Exception e) {                System.out.println("Invalid input");            }        }    }}